#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
# description: Kprobe event array argument

[ -f kprobe_events ] || exit_unsupported # this is configurable

grep -q "<type>\[<array-size>\]" README || exit_unsupported # version issue

GOODSYM="_sdata"
if ! grep -qw ${GOODSYM} /proc/kallsyms ; then
  GOODSYM="create_trace_kprobe"
fi
case `uname -m` in
x86_64)
  ARG2=%si
  OFFS=8
;;
i[3456]86)
  ARG2=%cx
  OFFS=4
;;
aarch64)
  ARG2=%x1
  OFFS=8
;;
arm*)
  ARG2=%r1
  OFFS=4
;;
*)
  echo "Please implement other architecture here"
  exit_untested
esac

create_testprobe() { # args
  echo "p:testprobe create_trace_kprobe $*" > kprobe_events
}

echo 0 > events/enable
echo > kprobe_events

: "Syntax test"
create_testprobe "+0(${ARG2}):x8[1] +0(${ARG2}):s16[1] +0(${ARG2}):u32[1]"
create_testprobe "+0(${ARG2}):x64[1] +0(${ARG2}):symbol[1]"
create_testprobe "+0(${ARG2}):b2@3/8[1] +0(${ARG2}):string[1]"
create_testprobe "+0(${ARG2}):x8[64] @${GOODSYM}:x8[4]"

! create_testprobe "${ARG2}:x8[1]" # Can not use array type on register
! create_testprobe "\$comm:x8[1]" # Can not use array type on \$comm
! create_testprobe "\$comm:string[1]" # No, even if it is string array
! create_testprobe "+0(${ARG2}):x64[0]" # array size >= 1
! create_testprobe "+0(${ARG2}):x64[65]" # array size <= 64

: "Test get argument (1)"
create_testprobe "arg1=+0(${ARG2}):string[1]" > kprobe_events
echo 1 > events/kprobes/testprobe/enable
! echo test >> kprobe_events
tail -n 1 trace | grep -qe "testprobe.* arg1={\"test\"}"
echo 0 > events/kprobes/testprobe/enable

: "Test get argument (2)"
create_testprobe "arg1=+0(${ARG2}):string[3]" > kprobe_events
echo 1 > events/kprobes/testprobe/enable
! echo foo bar buzz >> kprobe_events
tail -n 1 trace | grep -qe "testprobe.* arg1={\"foo\",\"bar\",\"buzz\"}"
echo 0 > events/kprobes/testprobe/enable

: "Test get argument (3)"
create_testprobe "arg1=+0(+0(${ARG2})):u8[4]" > kprobe_events
echo 1 > events/kprobes/testprobe/enable
! echo 1234 >> kprobe_events
tail -n 1 trace | grep -qe "testprobe.* arg1={49,50,51,52}" # ascii code
echo 0 > events/kprobes/testprobe/enable

echo > kprobe_events
