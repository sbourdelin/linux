Boot time creation of mapped devices
====================================

It is possible to configure a device-mapper device to act as the root device for
your system in two ways.

The first is to build an initial ramdisk which boots to a minimal userspace
which configures the device, then pivot_root(8) in to it.

The second is when the device-mapper and targets are compiled into the kernel
(not a module). One or more device-mappers may be created and used as the root
device at boot time with the parameters given with the boot line dm=...

The format is specified as a string of data separated by commas and optionally
semi-colons, where:
 - a comma is used to separate fields like name, uuid, flags and table
   (specifies one device)
 - a semi-colon is used to separate devices.

So the format will look like this:

 dm=<name>,<uuid>,<minor>,<flags>,<table>[,<table>+][;<name>,<uuid>,<minor>,<flags>,<table>[,<table>+]+]

Where,
	<name>		::= The device name.
	<uuid>		::= xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx | ""
	<minor>		::= The device minor number | ""
	<flags>		::= "ro" | "rw"
	<table>		::= <start_sector> <num_sectors> <target_type> <target_args>
	<target_type>	::= "verity" | "linear" | ... (see list below)

The dm line should be equivalent to the one used by the dmsetup tool with the
--concise argument.

Target types
============

Not all target types are available as there are serious risks in allowing
activation of certain DM targets without first using userspace tools to check
the validity of associated metadata.


	"cache":		constrained, requires userspace validation
	"crypt":		allowed
	"delay":		allowed
	"era":			allowed
	"error":		allowed
	"flakey":		allowed
	"integrity":		allowed
	"linear":		allowed
	"log-writes":		allowed
	"mirror":		allowed
	"multipath":		allowed
	"raid":			allowed
	"snapshot":		allowed
	"snapshot-origin":	allowed
	"striped":		allowed
	"switch":		allowed
	"thin":			constrained,requires userspace validation
	"thin-pool":		constrained, requires userspace validation
	"unstriped":		allowed
	"verity":		allowed
	"writecache":		allowed
	"zero":			constrained, requires userspace validation
	"zoned":		allowed

Examples
========
An example of booting to a linear array made up of user-mode linux block
devices:

  dm="lroot,,,rw, 0 4096 linear 98:16 0, 4096 4096 linear 98:32 0" root=/dev/dm-0

This will boot to a rw dm-linear target of 8192 sectors split across two block
devices identified by their major:minor numbers.  After boot, udev will rename
this target to /dev/mapper/lroot (depending on the rules). No uuid was assigned.

An example of multiple device-mappers, with the dm="..." contents is shown here
split on multiple lines for readability:

  vroot,,,ro,
    0 1740800 verity 254:0 254:0 1740800 sha1
      76e9be054b15884a9fa85973e9cb274c93afadb6
      5b3549d54d6c7a3837b9b81ed72e49463a64c03680c47835bef94d768e5646fe;
  vram,,,rw,
    0 32768 linear 1:0 0,
    32768 32768 linear 1:1 0
