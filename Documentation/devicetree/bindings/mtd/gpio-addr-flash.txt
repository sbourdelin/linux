Memory Mapped flash with some address lines addressed using GPIOs

Handle the case where a flash device is mostly addressed using physical
line and supplemented by GPIOs.  This way you can hook up say a 8MiB flash
to a 2MiB memory range and use the GPIOs to select a particular range.

 - compatible : "cfi-gpio-addr-flash"
 - reg : Address range of the mtd chip that is memory mapped, this is,
   on the previous example 2MiB.
 - bank-width : Width (in bytes) of the bank.  Equal to the
   device width times the number of interleaved chips.
 - probe-type : (optional) "cfi_probe", "jedec_probe". How the mtd chip
   is going to be probed. If omitted, assumed to be equal to "cfi_probe".
 - #address-cells, #size-cells : Must be present if the device has
   sub-nodes representing partitions (see below).  In this case
   both #address-cells and #size-cells must be equal to 1.

The device tree may optionally contain sub-nodes describing partitions of the
address space. See partition.txt for more detail.

Example:

	cfi_flash_0: cfi_flash {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "cfi-gpio-addr-flash";
		bank-width = <2>;
		reg = < 0x00300000 0x00200000 >;
		gpios = <&gpio_0 3 0>, <&gpio_0 4 0>;
		partition@0 {
			reg = < 0x0 0x200000 >;
			label = "Golden Bitstream";
		};
		partition@200000 {
			reg = < 0x200000 0x200000 >;
			label = "User Bitstream";
		};
		partition@400000 {
			reg = < 0x400000 0x200000 >;
			label = "V4L Controls";
		};
		partition@600000 {
			reg = < 0x600000 0x200000 >;
			label = "Production Data";
		};
	} ;
