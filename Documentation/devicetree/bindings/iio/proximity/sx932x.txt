Semtech's SX9320/SX9321/SX9324 capacitive proximity button device driver

Required properties:
	- compatible: must be "semtech,sx9320 or sx9321 or sx9324"
	- reg: i2c address where to find the device
	- interrupt-parent : should be the phandle for the interrupt controller
	- interrupts : the sole interrupt generated by the device
	- semtech,register-prefix: the string prefixing all register names in the

	Refer to interrupt-controller/interrupts.txt for generic
	interrupt client node bindings.

Optional properties:
	- semtech,adv_ctrl10: Initial value for register AdvCtrl10.
	- semtech,afe_ctrl4: Initial value for register AfeCtrl4.
	- semtech,afe_ctrl7: Initial value for register AfeCtrl7.
	- semtech,afe_ctrl9: Initial value for register AfeCtrl9.
	- semtech,prox_ctrl0: Initial value for register ProxCtrl0.
	- semtech,prox_ctrl1: Initial value for register ProxCtrl1.
	- semtech,prox_ctrl2: Initial value for register ProxCtrl2.
	- semtech,prox_ctrl4: Initial value for register ProxCtrl4.
	- semtech,prox_ctrl5: Initial value for register ProxCtrl5.
	- semtech,prox_ctrl6: Initial value for register ProxCtrl6.
	- semtech,prox_ctrl7: Initial value for register Prox_Trl7.
	- semtech,adv_ctrl16: Initial value for register AdvCtrl16.
	- semtech,adv_ctrl17: Initial value for register AdvCtrl17.
	- semtech,adv_ctrl18: Initial value for register AdvCtrl18.
	- semtech,gnrl_ctrl1: Initial value for register GnrlCtrl1.

	Refer to the data sheet for register definitions.

Example:

sx9310@28 {
	compatible = "semtech,sx9320";
	reg = <0x28>;
	interrupt-parent = <&gpio2>;
	interrupts = <16 IRQ_TYPE_LEVEL_LOW>;
};

Driver supports ACPI bindings. We can store registers configuration obtained
from per-model SAR sensor calibration. Refer to the data sheet for meaning.

ACPI name is STH9320 or STH9321 or STH9324.

Example:
    chip drivers/i2c/generic
            register "hid" = ""STH9321""
            register "name" = ""SEMTECH SX9321""
            register "desc" = ""SAR Proximity Sensor""
            register "irq" = "ACPI_IRQ_LEVEL_LOW(GPP_A18_IRQ)"
            register "device_present_gpio" = "GPP_B20"
            device i2c 28 on end
    end
