ARM SMC Mailbox Driver
======================

This mailbox uses the ARM smc (secure monitor call) instruction to
trigger a mailbox-connected activity in firmware, executing on the very same
core as the caller. By nature this operation is synchronous and this
mailbox provides no way for asynchronous messages to be delivered the other
way round, from firmware to the OS. However the value of r0/w0/x0 the firmware
returns after the smc call is delivered as a received message to the
mailbox framework, so a synchronous communication can be established.

One use case of this mailbox is the SCP interface, which uses shared memory
to transfer commands and parameters, and a mailbox to trigger a function
call. This allows SoCs without a separate management processor (or
when such a processor is not available or used) to use this standardized
interface anyway.

This binding describes no hardware, but establishes a firmware interface.
The communication follows the ARM SMC calling convention[1].
Any core which supports the SMC or HVC instruction can be used, as long as
a firmware component running in EL3 or EL2 is handling these calls.

Mailbox Device Node:
====================

Required properties:
--------------------
- compatible:		Shall be "arm,smc-mbox"
- #mbox-cells		Shall be 1 - the index of the channel needed.
- arm,smc-func-ids	An array of 32-bit values specifying the function
			IDs used by each mailbox channel. Those function IDs
			follow the ARM SMC calling convention standard [1].
			There is one identifier per channel and the number
			of supported channels is determined by the length
			of this array.

Optional properties:
--------------------
- method:		A string, either:
			"hvc": if the driver shall use an HVC call, or
			"smc": if the driver shall use an SMC call
			If omitted, defaults to an SMC call.

Example:
--------

	mailbox: smc_mbox {
		#mbox-cells = <1>;
		compatible = "arm,smc-mbox";
		identifiers = <0x82000001>, <0x82000002>;
	};

	scpi {
		compatible = "arm,scpi";
		mboxes = <&mailbox 0>;
		shmem = <&cpu_scp_shmem>;
	};


[1]
http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.den0028a/index.html
