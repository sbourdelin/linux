// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from
// C, C++ and SystemC
// Version: 2018.1.0
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// SPDX-License-Identifier: GPL-2.0
// ==============================================================

// CTRL
// 0x0000 : Control signals
//          bit 0  - ap_start (Read/Write/COH)
//          bit 1  - ap_done (Read/COR)
//          bit 2  - ap_idle (Read)
//          bit 3  - ap_ready (Read)
//          bit 7  - auto_restart (Read/Write)
//          others - reserved
// 0x0004 : Global Interrupt Enable Register
//          bit 0  - Global Interrupt Enable (Read/Write)
//          others - reserved
// 0x0008 : IP Interrupt Enable Register (Read/Write)
//          bit 0  - Channel 0 (ap_done)
//          bit 1  - Channel 1 (ap_ready)
//          others - reserved
// 0x000c : IP Interrupt Status Register (Read/TOW)
//          bit 0  - Channel 0 (ap_done)
//          bit 1  - Channel 1 (ap_ready)
//          others - reserved
// 0x0010 : Data signal of HwReg_num_outs
//          bit 7~0 - HwReg_num_outs[7:0] (Read/Write)
//          others  - reserved
// 0x0014 : reserved
// 0x0100 : Data signal of HwReg_WidthIn_0
//          bit 15~0 - HwReg_WidthIn_0[15:0] (Read/Write)
//          others   - reserved
// 0x0104 : reserved
// 0x0108 : Data signal of HwReg_WidthOut_0
//          bit 15~0 - HwReg_WidthOut_0[15:0] (Read/Write)
//          others   - reserved
// 0x010c : reserved
// 0x0110 : Data signal of HwReg_HeightIn_0
//          bit 15~0 - HwReg_HeightIn_0[15:0] (Read/Write)
//          others   - reserved
// 0x0114 : reserved
// 0x0118 : Data signal of HwReg_HeightOut_0
//          bit 15~0 - HwReg_HeightOut_0[15:0] (Read/Write)
//          others   - reserved
// 0x011c : reserved
// 0x0120 : Data signal of HwReg_LineRate_0
//          bit 31~0 - HwReg_LineRate_0[31:0] (Read/Write)
// 0x0124 : reserved
// 0x0128 : Data signal of HwReg_PixelRate_0
//          bit 31~0 - HwReg_PixelRate_0[31:0] (Read/Write)
// 0x012c : reserved
// 0x0130 : Data signal of HwReg_InPixelFmt_0
//          bit 7~0 - HwReg_InPixelFmt_0[7:0] (Read/Write)
//          others  - reserved
// 0x0134 : reserved
// 0x0138 : Data signal of HwReg_OutPixelFmt_0
//          bit 7~0 - HwReg_OutPixelFmt_0[7:0] (Read/Write)
//          others  - reserved
// 0x013c : reserved
// 0x0140 : Data signal of HwReg_FiltIdx_0
//          bit 7~0 - HwReg_FiltIdx_0[7:0] (Read/Write)
//          others  - reserved
// 0x0144 : reserved
// 0x0150 : Data signal of HwReg_InStride_0
//          bit 15~0 - HwReg_InStride_0[15:0] (Read/Write)
//          others   - reserved
// 0x0154 : reserved
// 0x0158 : Data signal of HwReg_OutStride_0
//          bit 15~0 - HwReg_OutStride_0[15:0] (Read/Write)
//          others   - reserved
// 0x015c : reserved
// 0x0160 : Data signal of HwReg_srcImgBuf0_0
//          bit 31~0 - HwReg_srcImgBuf0_0[31:0] (Read/Write)
// 0x0164 : reserved
// 0x0170 : Data signal of HwReg_srcImgBuf1_0
//          bit 31~0 - HwReg_srcImgBuf1_0[31:0] (Read/Write)
// 0x0174 : reserved
// 0x0190 : Data signal of HwReg_dstImgBuf0_0
//          bit 31~0 - HwReg_dstImgBuf0_0[31:0] (Read/Write)
// 0x0194 : reserved
// 0x0200 : Data signal of HwReg_dstImgBuf1_0
//          bit 31~0 - HwReg_dstImgBuf1_0[31:0] (Read/Write)
// 0x0204 : reserved
// 0x1500 : Data signal of HwReg_WidthIn_7
//          bit 15~0 - HwReg_WidthIn_7[15:0] (Read/Write)
//          others   - reserved
// 0x1504 : reserved
// 0x1508 : Data signal of HwReg_WidthOut_7
//          bit 15~0 - HwReg_WidthOut_7[15:0] (Read/Write)
//          others   - reserved
// 0x150c : reserved
// 0x1510 : Data signal of HwReg_HeightIn_7
//          bit 15~0 - HwReg_HeightIn_7[15:0] (Read/Write)
//          others   - reserved
// 0x1514 : reserved
// 0x1518 : Data signal of HwReg_HeightOut_7
//          bit 15~0 - HwReg_HeightOut_7[15:0] (Read/Write)
//          others   - reserved
// 0x151c : reserved
// 0x1520 : Data signal of HwReg_LineRate_7
//          bit 31~0 - HwReg_LineRate_7[31:0] (Read/Write)
// 0x1524 : reserved
// 0x1528 : Data signal of HwReg_PixelRate_7
//          bit 31~0 - HwReg_PixelRate_7[31:0] (Read/Write)
// 0x152c : reserved
// 0x1530 : Data signal of HwReg_InPixelFmt_7
//          bit 7~0 - HwReg_InPixelFmt_7[7:0] (Read/Write)
//          others  - reserved
// 0x1534 : reserved
// 0x1538 : Data signal of HwReg_OutPixelFmt_7
//          bit 7~0 - HwReg_OutPixelFmt_7[7:0] (Read/Write)
//          others  - reserved
// 0x153c : reserved
// 0x1540 : Data signal of HwReg_FiltIdx_7
//          bit 7~0 - HwReg_FiltIdx_7[7:0] (Read/Write)
//          others  - reserved
// 0x1544 : reserved
// 0x1550 : Data signal of HwReg_InStride_7
//          bit 15~0 - HwReg_InStride_7[15:0] (Read/Write)
//          others   - reserved
// 0x1554 : reserved
// 0x1558 : Data signal of HwReg_OutStride_7
//          bit 15~0 - HwReg_OutStride_7[15:0] (Read/Write)
//          others   - reserved
// 0x155c : reserved
// 0x1560 : Data signal of HwReg_srcImgBuf0_7
//          bit 31~0 - HwReg_srcImgBuf0_7[31:0] (Read/Write)
// 0x1564 : reserved
// 0x1570 : Data signal of HwReg_srcImgBuf1_7
//          bit 31~0 - HwReg_srcImgBuf1_7[31:0] (Read/Write)
// 0x1574 : reserved
// 0x1590 : Data signal of HwReg_dstImgBuf0_7
//          bit 31~0 - HwReg_dstImgBuf0_7[31:0] (Read/Write)
// 0x1594 : reserved
// 0x1600 : Data signal of HwReg_dstImgBuf1_7
//          bit 31~0 - HwReg_dstImgBuf1_7[31:0] (Read/Write)
// 0x1604 : reserved
// 0x2000 ~
// 0x23ff : Memory 'HwReg_mm_vfltCoeff_L' (384 * 16b)
//          Word n : bit [15: 0] - HwReg_mm_vfltCoeff_L[2n]
//                   bit [31:16] - HwReg_mm_vfltCoeff_L[2n+1]
// 0x2800 ~
// 0x2bff : Memory 'HwReg_mm_vfltCoeff_H' (384 * 16b)
//          Word n : bit [15: 0] - HwReg_mm_vfltCoeff_H[2n]
//                   bit [31:16] - HwReg_mm_vfltCoeff_H[2n+1]
// 0x4000 ~
// 0x43ff : Memory 'HwReg_mm_hfltCoeff_L' (384 * 16b)
//          Word n : bit [15: 0] - HwReg_mm_hfltCoeff_L[2n]
//                   bit [31:16] - HwReg_mm_hfltCoeff_L[2n+1]
// 0x4800 ~
// 0x4bff : Memory 'HwReg_mm_hfltCoeff_H' (384 * 16b)
//          Word n : bit [15: 0] - HwReg_mm_hfltCoeff_H[2n]
//                   bit [31:16] - HwReg_mm_hfltCoeff_H[2n+1]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write,
//  COH = Clear on Handshake)
#ifndef __HW_REGS_XM2MVSC_H__
#define __HW_REGS_XM2MVSC_H__

#define XM2MVSC_AP_CTRL			0x0000
#define XM2MVSC_GIE			0x0004
#define XM2MVSC_IER			0x0008
#define XM2MVSC_ISR			0x000c
#define XM2MVSC_NUM_OUTS		0x0010

#define XM2MVSC_WIDTHIN_0		0x0100
#define XM2MVSC_WIDTHOUT_0		0x0108
#define XM2MVSC_HEIGHTIN_0		0x0110
#define XM2MVSC_HEIGHTOUT_0		0x0118
#define XM2MVSC_LINERATE_0		0x0120
#define XM2MVSC_PIXELRATE_0		0x0128
#define XM2MVSC_INPIXELFMT_0		0x0130
#define XM2MVSC_OUTPIXELFMT_0		0x0138
#define XM2MVSC_FILTIDX_0		0x0140
#define XM2MVSC_INSTRIDE_0		0x0150
#define XM2MVSC_OUTSTRIDE_0		0x0158
#define XM2MVSC_SRCIMGBUF0_0		0x0160
#define XM2MVSC_SRCIMGBUF1_0		0x0170
#define XM2MVSC_DSTIMGBUF0_0		0x0190
#define XM2MVSC_DSTIMGBUF1_0		0x0200

#define XM2MVSC_WIDTH_IN(x)	(XM2MVSC_WIDTHIN_0     + 0x200 * (x))
#define XM2MVSC_WIDTH_OUT(x)	(XM2MVSC_WIDTHOUT_0    + 0x200 * (x))
#define XM2MVSC_HEIGHT_IN(x)	(XM2MVSC_HEIGHTIN_0    + 0x200 * (x))
#define XM2MVSC_HEIGHT_OUT(x)	(XM2MVSC_HEIGHTOUT_0   + 0x200 * (x))
#define XM2MVSC_LINERATE(x)	(XM2MVSC_LINERATE_0    + 0x200 * (x))
#define XM2MVSC_PIXELRATE(x)	(XM2MVSC_PIXELRATE_0   + 0x200 * (x))
#define XM2MVSC_PIXELFMT_IN(x)	(XM2MVSC_INPIXELFMT_0  + 0x200 * (x))
#define XM2MVSC_PIXELFMT_OUT(x)	(XM2MVSC_OUTPIXELFMT_0 + 0x200 * (x))
#define XM2MVSC_FILTER_BANK(x)	(XM2MVSC_FILTIDX_0     + 0x200 * (x))
#define XM2MVSC_STRIDE_IN(x)	(XM2MVSC_INSTRIDE_0    + 0x200 * (x))
#define XM2MVSC_STRIDE_OUT(x)	(XM2MVSC_OUTSTRIDE_0   + 0x200 * (x))
#define XM2MVSC_SRC_BUF1(x)	(XM2MVSC_SRCIMGBUF0_0  + 0x200 * (x))
#define XM2MVSC_SRC_BUF2(x)	(XM2MVSC_SRCIMGBUF1_0  + 0x200 * (x))
#define XM2MVSC_DST_BUF1(x)	(XM2MVSC_DSTIMGBUF0_0  + 0x200 * (x))
#define XM2MVSC_DST_BUF2(x)	(XM2MVSC_DSTIMGBUF1_0  + 0x200 * (x))

#define XM2MVSC_VFLTCOEFF_L		0x2000
#define XM2MVSC_VFLTCOEFF(x)	(XM2MVSC_VFLTCOEFF_L + 0x800 * (x))
#define XM2MVSC_HFLTCOEFF_L		0x4000
#define XM2MVSC_HFLTCOEFF(x)	(XM2MVSC_HFLTCOEFF_L + 0x800 * (x))

#endif /* __HW_REGS_XM2MVSC_H__ */
