/* SPDX-License-Identifier: GPL-2.0 */
/* Octeon III BGX Nexus Ethernet driver
 *
 * Copyright (C) 2018 Cavium, Inc.
 */
#ifndef _OCTEON3_BGX_H_
#define _OCTEON3_BGX_H_

#include <linux/bitops.h>

#define BGX_RX_FIFO_SIZE		(64 * 1024)
#define BGX_TX_FIFO_SIZE		(32 * 1024)

/* Bgx register definitions */
#define BGX_BASE			0x11800e0000000ull
#define BGX_ADDR(node, bgx, index)	(BGX_BASE + SET_XKPHYS +	       \
					 NODE_OFFSET(node) + ((bgx) << 24) +   \
					 ((index) << 20))
#define BGX_ADDR_CAM(n, b, mac)		(BGX_ADDR(n, b, 0) + ((mac) << 3))

#define BGX_CMR_CONFIG(n, b, i)		(BGX_ADDR(n, b, i) + 0x00000)
#define BGX_CMR_GLOBAL_CONFIG(n, b)	(BGX_ADDR(n, b, 0) + 0x00008)
#define BGX_CMR_RX_ID_MAP(n, b, i)	(BGX_ADDR(n, b, i) + 0x00028)
#define BGX_CMR_RX_BP_ON(n, b, i)	(BGX_ADDR(n, b, i) + 0x00088)
#define BGX_CMR_RX_ADR_CTL(n, b, i)	(BGX_ADDR(n, b, i) + 0x000a0)
#define BGX_CMR_RX_FIFO_LEN(n, b, i)	(BGX_ADDR(n, b, i) + 0x000c0)
#define BGX_CMR_RX_ADRX_CAM(n, b, m)	(BGX_ADDR_CAM(n, b, m) + 0x00100)
#define BGX_CMR_CHAN_MSK_AND(n, b)	(BGX_ADDR(n, b, 0) + 0x00200)
#define BGX_CMR_CHAN_MSK_OR(n, b)	(BGX_ADDR(n, b, 0) + 0x00208)
#define BGX_CMR_TX_FIFO_LEN(n, b, i)	(BGX_ADDR(n, b, i) + 0x00418)
#define BGX_CMR_TX_LMACS(n, b)		(BGX_ADDR(n, b, 0) + 0x01000)

#define BGX_SPU_CONTROL1(n, b, i)	(BGX_ADDR(n, b, i) + 0x10000)
#define BGX_SPU_STATUS1(n, b, i)	(BGX_ADDR(n, b, i) + 0x10008)
#define BGX_SPU_STATUS2(n, b, i)	(BGX_ADDR(n, b, i) + 0x10020)
#define BGX_SPU_BX_STATUS(n, b, i)	(BGX_ADDR(n, b, i) + 0x10028)
#define BGX_SPU_BR_STATUS1(n, b, i)	(BGX_ADDR(n, b, i) + 0x10030)
#define BGX_SPU_BR_STATUS2(n, b, i)	(BGX_ADDR(n, b, i) + 0x10038)
#define BGX_SPU_BR_BIP_ERR_CNT(n, b, i)	(BGX_ADDR(n, b, i) + 0x10058)
#define BGX_SPU_BR_PMD_CONTROL(n, b, i)	(BGX_ADDR(n, b, i) + 0x10068)
#define BGX_SPU_BR_PMD_LP_CUP(n, b, i)	(BGX_ADDR(n, b, i) + 0x10078)
#define BGX_SPU_BR_PMD_LD_CUP(n, b, i)	(BGX_ADDR(n, b, i) + 0x10088)
#define BGX_SPU_BR_PMD_LD_REP(n, b, i)	(BGX_ADDR(n, b, i) + 0x10090)
#define BGX_SPU_FEC_CONTROL(n, b, i)	(BGX_ADDR(n, b, i) + 0x100a0)
#define BGX_SPU_AN_CONTROL(n, b, i)	(BGX_ADDR(n, b, i) + 0x100c8)
#define BGX_SPU_AN_STATUS(n, b, i)	(BGX_ADDR(n, b, i) + 0x100d0)
#define BGX_SPU_AN_ADV(n, b, i)		(BGX_ADDR(n, b, i) + 0x100d8)
#define BGX_SPU_MISC_CONTROL(n, b, i)	(BGX_ADDR(n, b, i) + 0x10218)
#define BGX_SPU_INT(n, b, i)		(BGX_ADDR(n, b, i) + 0x10220)
#define BGX_SPU_DBG_CONTROL(n, b)	(BGX_ADDR(n, b, 0) + 0x10300)

#define BGX_SMU_RX_INT(n, b, i)		(BGX_ADDR(n, b, i) + 0x20000)
#define BGX_SMU_RX_FRM_CTL(n, b, i)	(BGX_ADDR(n, b, i) + 0x20008)
#define BGX_SMU_RX_JABBER(n, b, i)	(BGX_ADDR(n, b, i) + 0x20018)
#define BGX_SMU_RX_CTL(n, b, i)		(BGX_ADDR(n, b, i) + 0x20030)
#define BGX_SMU_TX_APPEND(n, b, i)	(BGX_ADDR(n, b, i) + 0x20100)
#define BGX_SMU_TX_MIN_PKT(n, b, i)	(BGX_ADDR(n, b, i) + 0x20118)
#define BGX_SMU_TX_INT(n, b, i)		(BGX_ADDR(n, b, i) + 0x20140)
#define BGX_SMU_TX_CTL(n, b, i)		(BGX_ADDR(n, b, i) + 0x20160)
#define BGX_SMU_TX_THRESH(n, b, i)	(BGX_ADDR(n, b, i) + 0x20168)
#define BGX_SMU_CTRL(n, b, i)		(BGX_ADDR(n, b, i) + 0x20200)

#define BGX_GMP_PCS_MR_CONTROL(n, b, i)	(BGX_ADDR(n, b, i) + 0x30000)
#define BGX_GMP_PCS_MR_STATUS(n, b, i)	(BGX_ADDR(n, b, i) + 0x30008)
#define BGX_GMP_PCS_AN_ADV(n, b, i)	(BGX_ADDR(n, b, i) + 0x30010)
#define BGX_GMP_PCS_LINK_TIMER(n, b, i)	(BGX_ADDR(n, b, i) + 0x30040)
#define BGX_GMP_PCS_SGM_AN_ADV(n, b, i)	(BGX_ADDR(n, b, i) + 0x30068)
#define BGX_GMP_PCS_MISC_CTL(n, b, i)	(BGX_ADDR(n, b, i) + 0x30078)
#define BGX_GMP_GMI_PRT_CFG(n, b, i)	(BGX_ADDR(n, b, i) + 0x38010)
#define BGX_GMP_GMI_RX_FRM_CTL(n, b, i)	(BGX_ADDR(n, b, i) + 0x38018)
#define BGX_GMP_GMI_RX_JABBER(n, b, i)	(BGX_ADDR(n, b, i) + 0x38038)
#define BGX_GMP_GMI_TX_THRESH(n, b, i)	(BGX_ADDR(n, b, i) + 0x38210)
#define BGX_GMP_GMI_TX_APPEND(n, b, i)	(BGX_ADDR(n, b, i) + 0x38218)
#define BGX_GMP_GMI_TX_SLOT(n, b, i)	(BGX_ADDR(n, b, i) + 0x38220)
#define BGX_GMP_GMI_TX_BURST(n, b, i)	(BGX_ADDR(n, b, i) + 0x38228)
#define BGX_GMP_GMI_TX_MIN_PKT(n, b, i)	(BGX_ADDR(n, b, i) + 0x38240)
#define BGX_GMP_GMI_TX_SGMII_CTL(n, b, i) (BGX_ADDR(n, b, i) + 0x38300)

/* Bgx register bitfields */
#define BGX_CMR_CHAN_MSK_MASK			GENMASK_ULL(15, 0)
#define BGX_CMR_CHAN_MSK_SHIFT			16
#define BGX_CMR_CONFIG_DATA_PKT_RX_EN		BIT(14)
#define BGX_CMR_CONFIG_DATA_PKT_TX_EN		BIT(13)
#define BGX_CMR_CONFIG_ENABLE			BIT(15)
#define BGX_CMR_CONFIG_LMAC_TYPE_MASK		GENMASK_ULL(10, 8)
#define BGX_CMR_CONFIG_LMAC_TYPE_SHIFT		8
#define BGX_CMR_CONFIG_MIX_EN			BIT(11)
#define BGX_CMR_GLOBAL_CONFIG_CMR_MIX0_RST	BIT(3)
#define BGX_CMR_GLOBAL_CONFIG_CMR_MIX1_RST	BIT(4)
#define BGX_CMR_RX_ADR_CTL_ACCEPT_ALL_MCST	BIT(1)
#define BGX_CMR_RX_ADR_CTL_BCST_ACCEPT		BIT(0)
#define BGX_CMR_RX_ADR_CTL_CAM_ACCEPT		BIT(3)
#define BGX_CMR_RX_ADR_CTL_MCST_MODE_MASK	GENMASK_ULL(2, 1)
#define BGX_CMR_RX_ADR_CTL_USE_CAM_FILTER	BIT(2)
#define BGX_CMR_RX_ADRX_CAM_EN			BIT(48)
#define BGX_CMR_RX_ADRX_CAM_ID_SHIFT		52
#define BGX_CMR_RX_FIFO_LEN_MASK		GENMASK_ULL(12, 0)
#define BGX_CMR_RX_ID_MAP_PKND_MASK		GENMASK_ULL(7, 0)
#define BGX_CMR_RX_ID_MAP_RID_MASK		GENMASK_ULL(14, 8)
#define BGX_CMR_RX_ID_MAP_RID_SHIFT		8
#define BGX_CMR_TX_FIFO_LEN_LMAC_IDLE		BIT(13)
#define BGX_CMR_TX_LMACS_MASK			GENMASK_ULL(2, 0)

#define BGX_SPU_AN_ADV_FEC_ABLE			BIT(46)
#define BGX_SPU_AN_ADV_FEC_REQ			BIT(47)
#define BGX_SPU_AN_ADV_A100G_CR10		BIT(26)
#define BGX_SPU_AN_ADV_A40G_CR4			BIT(25)
#define BGX_SPU_AN_ADV_A40G_KR4			BIT(24)
#define BGX_SPU_AN_ADV_A10G_KR			BIT(23)
#define BGX_SPU_AN_ADV_A10G_KX4			BIT(22)
#define BGX_SPU_AN_ADV_A1G_KX			BIT(21)
#define BGX_SPU_AN_ADV_RF			BIT(13)
#define BGX_SPU_AN_ADV_XNP_ABLE			BIT(12)
#define BGX_SPU_AN_CONTROL_XNP_EN		BIT(13)
#define BGX_SPU_AN_CONTROL_AN_EN		BIT(12)
#define BGX_SPU_AN_CONTROL_AN_RESTART		BIT(9)
#define BGX_SPU_AN_STATUS_AN_COMPLETE		BIT(5)
#define BGX_SPU_BR_PMD_CONTROL_TRAIN_EN		BIT(1)
#define BGX_SPU_BR_PMD_CONTROL_TRAIN_RESTART	BIT(0)
#define BGX_SPU_BR_STATUS1_BLK_LOCK		BIT(0)
#define BGX_SPU_BR_STATUS2_LATCHED_LOCK		BIT(15)
#define BGX_SPU_BR_STATUS2_LATCHED_BER		BIT(14)
#define BGX_SPU_BX_STATUS_ALIGND		BIT(12)
#define BGX_SPU_CONTROL1_RESET			BIT(15)
#define BGX_SPU_CONTROL1_LOOPBACK		BIT(14)
#define BGX_SPU_CONTROL1_LO_PWR			BIT(11)
#define BGX_SPU_DBG_CONTROL_US_CLK_PERIOD_MASK	GENMASK_ULL(43, 32)
#define BGX_SPU_DBG_CONTROL_US_CLK_PERIOD_SHIFT	32
#define BGX_SPU_DBG_CONTROL_AN_NONCE_MATCH_DIS	BIT(29)
#define BGX_SPU_DBG_CONTROL_AN_ARB_LINK_CHK_EN	BIT(18)
#define BGX_SPU_FEC_CONTROL_FEC_EN		BIT(0)
#define BGX_SPU_INT_AN_COMPLETE			BIT(12)
#define BGX_SPU_INT_AN_LINK_GOOD		BIT(11)
#define BGX_SPU_INT_AN_PAGE_RX			BIT(10)
#define BGX_SPU_INT_TRAINING_FAILURE		BIT(14)
#define BGX_SPU_INT_TRAINING_DONE		BIT(13)
#define BGX_SPU_MISC_CONTROL_RX_PACKET_DIS	BIT(12)
#define BGX_SPU_MISC_CONTROL_INTLV_RDISP	BIT(10)
#define BGX_SPU_STATUS1_RCV_LINK		BIT(2)
#define BGX_SPU_STATUS2_RCVFLT			BIT(10)

#define BGX_SMU_CTRL_TX_IDLE			BIT(1)
#define BGX_SMU_CTRL_RX_IDLE			BIT(0)
#define BGX_SMU_RX_CTL_STATUS_MASK		GENMASK_ULL(1, 0)
#define BGX_SMU_TX_APPEND_FCS_C			BIT(3)
#define BGX_SMU_TX_APPEND_FCS_D			BIT(2)
#define BGX_SMU_TX_APPEND_PAD			BIT(1)
#define BGX_SMU_TX_CTL_LS_MASK			GENMASK_ULL(5, 4)
#define BGX_SMU_TX_CTL_UNI_EN			BIT(1)
#define BGX_SMU_TX_CTL_DIC_EN			BIT(0)

#define BGX_GMP_GMI_PRT_CFG_TX_IDLE		BIT(13)
#define BGX_GMP_GMI_PRT_CFG_RX_IDLE		BIT(12)
#define BGX_GMP_GMI_PRT_CFG_SPEED_MSB		BIT(8)
#define BGX_GMP_GMI_PRT_CFG_SLOTTIME		BIT(3)
#define BGX_GMP_GMI_PRT_CFG_DUPLEX		BIT(2)
#define BGX_GMP_GMI_PRT_CFG_SPEED		BIT(1)
#define BGX_GMP_GMI_TX_APPEND_FCS		BIT(2)
#define BGX_GMP_GMI_TX_APPEND_PAD		BIT(1)
#define BGX_GMP_GMI_TX_APPEND_PREAMBLE		BIT(0)
#define BGX_GMP_GMI_TX_THRESH_DEFAULT		0x20
#define BGX_GMP_PCS_AN_ADV_REM_FLT_MASK		GENMASK_ULL(13, 12)
#define BGX_GMP_PCS_AN_ADV_PAUSE_MASK		GENMASK_ULL(8, 7)
#define BGX_GMP_PCS_AN_ADV_PAUSE_SHIFT		7
#define BGX_GMP_PCS_AN_ADV_PAUSE_NONE		0
#define BGX_GMP_PCS_AN_ADV_PAUSE_SYMMETRIC	1
#define BGX_GMP_PCS_AN_ADV_PAUSE_ASYMMETRIC	2
#define BGX_GMP_PCS_AN_ADV_PAUSE_BOTH		3
#define BGX_GMP_PCS_AN_ADV_HALF_DUPLEX		BIT(6)
#define BGX_GMP_PCS_AN_ADV_FULL_DUPLEX		BIT(5)
#define BGX_GMP_PCS_LINK_TIMER_COUNT_SHIFT	10
#define BGX_GMP_PCS_MISC_CTL_GMXENO		BIT(11)
#define BGX_GMP_PCS_MISC_CTL_MAC_PHY		BIT(9)
#define BGX_GMP_PCS_MISC_CTL_MODE		BIT(8)
#define BGX_GMP_PCS_MISC_CTL_SAMP_PT_MASK	GENMASK_ULL(6, 0)
#define BGX_GMP_PCS_MR_CONTROL_RESET		BIT(15)
#define BGX_GMP_PCS_MR_CONTROL_SPDLSB		BIT(13)
#define BGX_GMP_PCS_MR_CONTROL_AN_EN		BIT(12)
#define BGX_GMP_PCS_MR_CONTROL_PWR_DN		BIT(11)
#define BGX_GMP_PCS_MR_CONTROL_RST_AN		BIT(9)
#define BGX_GMP_PCS_MR_CONTROL_SPDMSB		BIT(6)
#define BGX_GMP_PCS_MR_STATUS_AN_CPT		BIT(5)
#define BGX_GMP_PCS_SGM_AN_ADV_DUPLEX_FULL	BIT(12)
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_MASK	GENMASK_ULL(11, 10)
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_SHIFT	10
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_10		0
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_100	1
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_1000	2
#define BGX_GMP_PCS_SGM_AN_ADV_SPEED_10000	3

#endif /* _OCTEON3_BGX_H_ */
